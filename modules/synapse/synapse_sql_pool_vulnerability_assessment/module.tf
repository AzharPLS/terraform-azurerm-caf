resource "azurerm_synapse_sql_pool_vulnerability_assessment" "syspva" {
  sql_pool_security_alert_policy_id = can(var.settings.sql_pool_security_alert_policy.id) ? var.settings.sql_pool_security_alert_policy.id : var.remote_objects.sql_pool_security_alert_policy[try(var.settings.sql_pool_security_alert_policy.lz_key, var.client_config.landingzone_key)][var.settings.sql_pool_security_alert_policy.key].id
  storage_container_path            = can(var.settings.storage_account.container_path) ? var.settings.storage_account.container_path : format("%s/%s", var.remote_objects.storage_accounts[try(var.settings.storage_account.lz_key, var.client_config.landingzone_key)][var.settings.storage_account.key].primary_blob_endpoint, var.settings.storage_account.path)
  storage_account_access_key        = can(var.settings.storage_account.key) == false ? try(var.settings.storage_account.endpoint, null) : var.remote_objects.storage_accounts[try(var.settings.storage_account.lz_key, var.client_config.landingzone_key)][var.settings.storage_account.key].primary_access_key
  storage_container_sas_key         = try(var.settings.storage_container_sas_key, null)
  dynamic "recurring_scans" {
    for_each = try(var.settings.recurring_scans, null) != null ? [var.settings.recurring_scans] : []
    content {
      enabled                           = try(recurring_scans.value.enabled, null)
      email_subscription_admins_enabled = try(recurring_scans.value.email_subscription_admins_enabled, null)
      emails                            = try(recurring_scans.value.emails, null)
    }
  }
}